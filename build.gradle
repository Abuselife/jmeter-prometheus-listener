apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = "io.github.kolesnikovm"
archivesBaseName = "jmeter-prometheus-listener"
version = '2.0.2'
sourceCompatibility = 1.8
def title = 'JMeterPrometheusListener'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'org.apache.jmeter', name: 'ApacheJMeter_core', version: '5.3'
    compileOnly group: 'org.apache.jmeter', name: 'ApacheJMeter_components', version: '5.3'
    compile group: 'io.prometheus', name: 'simpleclient', version: '0.9.0'
    compile group: 'io.prometheus', name: 'simpleclient_servlet', version: '0.9.0'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.29.v20200521'
}

task fatJar(type: Jar) {
    classifier = 'fat'
    manifest {
        attributes 'Implementation-Title': title,
                'Implementation-Version': version
    }
    baseName = project.name + '-plugin'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, fatJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'JMeter Prometheus Listener'
                packaging 'jar'
                description 'Apache JMeter Backend Listener implementation for Prometheus metrics exporting.'
                url 'https://github.com/kolesnikovm/jmeter-prometheus-listener'

                scm {
                    connection 'scm:git:git://github.com/kolesnikovm/jmeter-prometheus-listener.git'
                    developerConnection 'scm:git:ssh://github.com:kolesnikovm/jmeter-prometheus-listener.git'
                    url 'https://github.com/kolesnikovm/jmeter-prometheus-listener'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'kolesnikovm'
                        name 'Maxim Kolesnikov'
                        email 'maxxim.kolesnikov@gmail.com'
                    }
                }
            }
        }
    }
}